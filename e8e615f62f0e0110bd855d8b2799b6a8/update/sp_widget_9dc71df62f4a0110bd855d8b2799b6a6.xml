<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function($location) {
    /* widget controller */
    var c = this;

    function loadListItems() {
			if (c.data.opts.loadBehavior != 'Synchronous') {
				c.server.update();
			}
        
    }
	
	c.clickItem = function(item) {
		var params = {
			'id': c.data.opts.targetPageID
		}
		
		params[c.data.opts.sysIdUrlParameter] = item.sys_id.value;
		params[c.data.opts.tableUrlParameter] = c.data.opts.table;
		$location.search(params);
	}
	
	c.getPanelClasses = function() {
		if (c.data.opts.widgetTheme == 'Bootstrap') {
			return ['panel', 'panel-default']
		}
		return [];
	}

    loadListItems();
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.skeletonText {
	height: 1.2rem;
  margin: .5em 0;
  background-color: $panel-default-border;
  opacity: 0%;
  
  animation: fade 2s infinite;
}

.skeletonText.title {
	width: 33.33%
}

@keyframes fade {
  from {
    opacity: 100%;
  }
  
  50% {
    opacity: 0%;
  }
  
  to {
    opacity: 100%;
}</css>
        <data_table>sp_instance_vlist</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,table,filter,order_by,order_direction,maximum_entries,display_field,field_list</field_list>
        <has_preview>true</has_preview>
        <id>simple_list_skeleton_load</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Simple List Skeleton Load</name>
        <option_schema>[{"name":"description_field","section":"Data","default_value":"short_description","label":"Description Field","type":"field_name"},{"name":"load_behavior","section":"Behavior","default_value":"Asynchronous with Skeleton","label":"Load Behavior","type":"choice","choices":[{"label":"Synchronous","value":"Synchronous"},{"label":"Asynchronous","value":"Asynchronous"},{"label":"Asynchronous with Skeleton","value":"Asynchronous with Skeleton"}]},{"displayValue":"Page","name":"target_page_id","section":"Behavior","default_value":"form","label":"Target Page ID","type":"string","value":"sp_page"},{"name":"sys_id_url_parameter","section":"Behavior","default_value":"sys_id","label":"sys_id URL Parameter","type":"string"},{"name":"table_url_parameter","section":"Behavior","default_value":"table","label":"Table URL Parameter","type":"string"},{"name":"theme","section":"Presentation","default_value":"Bootstrap","label":"Theme","type":"choice","choices":[{"label":"Bootstrap","value":"Bootstrap"},{"label":"Custom","value":"Custom"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */
	
	function normalizeOptions() {
		var opts = {
			'title': options.title || 'Simple List',
			'table': options.table || 'incident',
			'query': options.query || 'active=true',
			'itemTitle': options.display_field || 'number',
			'itemDescription': options.description_field || '',
			'metaFields': options.fields || 'assigned_to,priority',
			'orderBy': options.order_by || 'sys_updated_on',
			'orderByDirection': options.order_by_direction || 'desc',
			'maximumItems': options.maximum_items || 5,
			'loadBehavior': options.load_behavior || 'Asynchronous with Skeleton',
			'targetPageID': options.target_page_id || 'form',
			'sysIdUrlParameter': options.sys_id_url_parameter || 'sys_id',
			'tableUrlParameter': options.table_url_parameter || 'table',
			'widgetTheme': options.theme || 'Bootstrap'
		};
		return opts;
	}
	
	data.opts = normalizeOptions();

    function getListItems(opts) {
			
			function getFieldViewObject(gr, fieldName) {
				return {
					'value': gr.getValue(fieldName),
					'display_value': gr.getDisplayValue(fieldName),
					'field_name': fieldName
				};
			}
			
			function getEachMetaField(gr) {
				return function(fieldName) {
					return getFieldViewObject(gr, fieldName);
				}
			}
			
        var items = [];
        var gr = new GlideRecord(opts.table);  
        gr.addEncodedQuery(opts.query);
		
		if (opts.orderByDirection == 'ASC') {
			gr.orderBy(opts.orderBy);
		} else {
			gr.orderByDesc(opts.orderBy);
		}
		
		gr.setLimit(opts.maximumItems);
        gr.query();

        while (gr.next()) {
            items.push({
							  'sys_id': getFieldViewObject(gr, 'sys_id'),
                'title': getFieldViewObject(gr, opts.itemTitle),
                'description': getFieldViewObject(gr, opts.itemDescription),
                'metaFields': opts.metaFields.split(',').map(getEachMetaField(gr))
						});
				}
        return items;
    }

    data.isLoading = true;
	
    if (input || data.opts.loadBehavior == 'Synchronous') {
        data.items = getListItems(data.opts);
        data.isLoading = false;
    }

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-03-09 01:15:25</sys_created_on>
        <sys_id>9dc71df62f4a0110bd855d8b2799b6a6</sys_id>
        <sys_mod_count>121</sys_mod_count>
        <sys_name>Simple List Skeleton Load</sys_name>
        <sys_package display_value="Skeleton Loading Widget" source="x_282674_skel_load">e8e615f62f0e0110bd855d8b2799b6a8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Skeleton Loading Widget">e8e615f62f0e0110bd855d8b2799b6a8</sys_scope>
        <sys_update_name>sp_widget_9dc71df62f4a0110bd855d8b2799b6a6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-03-10 20:15:04</sys_updated_on>
        <template><![CDATA[<div>
  <div ng-class="c.getPanelClasses()" ng-if="!c.data.isLoading">
    <div ng-class="{ 'panel-heading': c.data.opts.widgetTheme == 'Bootstrap' }">
      {{ c.data.opts.title }}
    </div>
    <ul ng-class="{ 'list-group': c.data.opts.widgetTheme == 'Bootstrap' }">
      <li ng-class="{ 'list-group-item': c.data.opts.widgetTheme == 'Bootstrap' }" ng-repeat="item in c.data.items">
        <a href ng-click="c.clickItem(item)">
          <div>
            {{ item.title.display_value }}
          </div>
          <div>
            {{ item.description.display_value }}
          </div>

          <div>
            <span ng-class="{ 'text-muted': c.data.opts.theme == 'Bootstrap' }" ng-repeat="field in item.metaFields">{{ field.display_value }}<span ng-if="!$last">
                - </span></span>
          </div>
        </a>
      </li>
    </ul>
  </div>
  <div ng-class="c.getPanelClasses()" ng-if="c.data.isLoading && c.data.opts.loadBehavior == 'Asynchronous with Skeleton'">
    <div ng-class="{ 'panel-heading': c.data.opts.widgetTheme == 'Bootstrap' }">
      {{ c.data.opts.title }}
    </div>
    <ul ng-class="{ 'list-group': c.data.opts.widgetTheme == 'Bootstrap' }" ng-if="c.data.isLoading" ng-repeat="item in [].constructor(5) track by $index">
      <li ng-class="{ 'list-group-item': c.data.opts.widgetTheme == 'Bootstrap' }">
        <div class="skeletonText title"></div>
        <div class="skeletonText"></div>
        <div class="skeletonText"></div>
      </li>
    </ul>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
